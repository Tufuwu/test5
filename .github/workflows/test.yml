# This is used for DatatableView

name: Django Datatable View Tests

on:
  push:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .
          pip install .[test]

      - name: outdated
        run: pip list --outdated --not-required --user | grep . && echo "There are outdated packages" && exit 1 || echo "All packages up to date"

  black:
    name: Black
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .
          pip install .[test]

      - name: Black
        run: black --check .
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .
          pip install .[test]
          pre-commit install

      - name: Pre-Commit
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install .
          pip install .[test]

      - name: Bandit
        run: bandit -c pyproject.toml -r -f json -o report.json .

      - name: Show report
        if: ${{ success() || failure() }}
  tests:
    name: Python ${{ matrix.python-version }} / ${{ matrix.db }} / Django ${{ matrix.django-version}}
    runs-on: ubuntu-latest
#    continue-on-error: ${{ matrix.django-version == '~=5.0' }}
    strategy:
      max-parallel: 4
      matrix:
        db: [ sqlite, mariadb ]
        django-version: ["~=4.2.0", "~=5.0"]
        python-version: ["3.9", "3.10"]

    services:
      mariadb:
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install .
          pip install .[test]
          pip uninstall -y Django
          pip install Django${{ matrix.django-version }}

        env:
          PYTHONWARNINGS: once::DeprecationWarning
          DB_TYPE: ${{ matrix.db }}
        run: export PYTHONPATH=`pwd` && coverage run
      - name: "Upload Coverage Results for PY:${{ matrix.python-version }} DB:${{ matrix.db}} DJ:${{ matrix.django-version }}"
        uses: actions/upload-artifact@v4
        with:
          retention-days: 1

      - name: Django Check
        run: python demo_app/manage.py check

  coverage:
    name: Upload Coverage to Codecov
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          pip install .
          pip install .[test]

      - uses: actions/download-artifact@v3
        with:
      - name: Combine Report Coverage
        run: |
          coverage combine coverage-*/.coverage
          coverage report
          coverage xml

      - name: Upload coverage to Codecov
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          pip install git+https://${{ secrets.ORGANIZATIONAL_REPO_TOKEN }}@github.com/pivotal-energy-solutions/tensor-infrastructure@master#egg=infrastructure
          PYTHONWARNINGS: once::DeprecationWarning
          GITHUB_TOKEN: ${{ secrets.ORGANIZATIONAL_REPO_TOKEN }}
        run: |
          bumper -P
          echo "bumped=$(jq '.bumped' out.json)" >> $GITHUB_OUTPUT
          echo "bump_version=$(jq '.bump_version' out.json)" >> $GITHUB_OUTPUT
          echo "bump_sha=$(jq '.bump_sha' out.json)" >> $GITHUB_OUTPUT