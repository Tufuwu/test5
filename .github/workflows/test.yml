name: lint-test-coverage

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  workflow_dispatch:

jobs:

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]

    steps:
      - name: checkout-code
        uses: actions/checkout@v3

      - name: prepare-python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: install-poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.1.14

      - name: install-dependencies
        run: |
          poetry install

      - name: check-fmt
        run: |
          make check-fmt

      - name: lint-code
        run: |
          make flake
          make lint

  test:
    needs: lint
    runs-on: ubuntu-latest
    env:
      PYTHONHASHSEED: 0
      USING_COVERAGE: '3.9'
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10"]

    steps:
      - name: checkout-code
        uses: actions/checkout@v3

      - name: prepare-python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: install-poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.1.14

      - name: install-dependencies
        run: |
          poetry install

      - name: run-tests
        run: |
          poetry run py.test -n auto

      - name: create-coverage-report
        if: "contains(env.USING_COVERAGE, matrix.python-version)"
        run: |
          make coverage

      - name: submit-to-codecov-io
        if: "contains(env.USING_COVERAGE, matrix.python-version)"
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
