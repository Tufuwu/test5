meta:
  name: Verify CK with Calico
  description: |
    Verifies that CK with Calico passes integration tests
  mkdocs:
    destination:
      - "validations/ck/calico.md"

matrix:
  snap_version:
    - 1.19/edge
    - 1.18/edge
    - 1.17/edge
    - 1.16/edge
  test_bgp:
    - "0"
    - "1"
  series:
    - focal
    - bionic
    - xenial
  channel:
    - edge
  arch:
    - amd64

concurrent: no

plan:
  env:
    - JUJU_DEPLOY_BUNDLE=cs:~containers/kubernetes-calico
    - JUJU_DEPLOY_CHANNEL=$CHANNEL
    - JUJU_CLOUD=aws/us-east-2
    - JUJU_CONTROLLER=validate-ck-calico
    - JUJU_MODEL=validate-calico
  pre-execute: |
    #!/bin/bash
    . $WORKSPACE/cilib.sh

    setup_env

    python $WORKSPACE/jobs/integration/tigera_aws.py cleanup

    export NUM_SUBNETS=1
    if [ "$TEST_BGP" = "1" ]; then
      export NUM_SUBNETS=2
      ogc-collect set-key 'job_name_custom' "validate-ck-calico-bgp-router-$SERIES-$SNAP_VERSION"
    fi

    python $WORKSPACE/jobs/integration/tigera_aws.py bootstrap

    if [ "$TEST_BGP" = "1" ]; then
      echo "Deploying bgp router"
      python $WORKSPACE/jobs/integration/tigera_aws.py deploy-bgp-router
    fi

    cat > overlay.yaml <<EOF
    applications:
      kubernetes-master:
        options:
          channel: $SNAP_VERSION
      kubernetes-worker:
        options:
          channel: $SNAP_VERSION
    EOF

    juju deploy -m $JUJU_CONTROLLER:$JUJU_MODEL \
          --overlay overlay.yaml \
          --force \
          --channel $JUJU_DEPLOY_CHANNEL $JUJU_DEPLOY_BUNDLE

    python $WORKSPACE/jobs/integration/tigera_aws.py disable-source-dest-check

    if [ "$TEST_BGP" = "1" ]; then
      python $WORKSPACE/jobs/integration/tigera_aws.py configure-bgp
    fi

    timeout 45m juju-wait -e $JUJU_CONTROLLER:$JUJU_MODEL -w

  execute: |
    #!/bin/bash
    set -eu

    . $WORKSPACE/cilib.sh

    inject_env

    timeout 2h pytest \
       $WORKSPACE/jobs/integration/validation.py \
       --cloud $JUJU_CLOUD \
       --model $JUJU_MODEL \
       --controller $JUJU_CONTROLLER

  post-execute: |
    #!/bin/bash
    . $WORKSPACE/cilib.sh

    inject_env

    collect_env

    python $WORKSPACE/jobs/integration/tigera_aws.py cleanup

    teardown_env
