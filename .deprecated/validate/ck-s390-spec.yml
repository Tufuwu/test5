meta:
  name: Verify CK on s390x
  description: |
    Verifies that CK on s390x localhost passes integration tests
  mkdocs:
    destination:
      - "validations/ck/s390x.md"

matrix:
  snap_version:
    # - 1.19/edge
    - 1.18/edge
    # - 1.17/edge
    # - 1.16/edge
    # - 1.15/edge
  series:
    # - focal
    - bionic
    # - xenial
  channel:
    - edge

concurrent: no

plan:
  env:
    - JUJU_CONTROLLER=validate-ck-s390x
    - JUJU_MODEL=validate-s390x
    - JUJU_CLOUD=us-east-2
    - JUJU_DEPLOY_CHANNEL=$CHANNEL
  pre-execute: |
    #!/bin/bash
    . $WORKSPACE/cilib.sh

    setup_env

    ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=10 -i /var/lib/jenkins/.ssh/cdkbot_rsa -tt ubuntu@10.13.6.3 -- sudo systemctl restart snap.lxd.daemon.service
  post-execute: |
    #!/bin/bash
    set -x

    . $WORKSPACE/cilib.sh

    inject_env

    ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=10 -i /var/lib/jenkins/.ssh/cdkbot_rsa -tt ubuntu@10.13.6.3 -- /snap/bin/juju-crashdump -s -a debug-layer -a config -m "$JUJU_CONTROLLER:$JUJU_MODEL"
    scp -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=10 -i /var/lib/jenkins/.ssh/cdkbot_rsa -r ubuntu@10.13.6.3:juju-crashdump* $OGC_JOB_WORKDIR/.
    scp -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=10 -i /var/lib/jenkins/.ssh/cdkbot_rsa -r ubuntu@10.13.6.3:jenkins/*.log $OGC_JOB_WORKDIR/. || true
    scp -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=10 -i /var/lib/jenkins/.ssh/cdkbot_rsa -r ubuntu@10.13.6.3:jenkins/*.xml $OGC_JOB_WORKDIR/. || true
    scp -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=10 -i /var/lib/jenkins/.ssh/cdkbot_rsa -r ubuntu@10.13.6.3:jenkins/*.xls $OGC_JOB_WORKDIR/. || true

    ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=10 -i /var/lib/jenkins/.ssh/cdkbot_rsa -tt ubuntu@10.13.6.3 -- rm -rf juju-crashdump* || true
    ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=10 -i /var/lib/jenkins/.ssh/cdkbot_rsa -tt ubuntu@10.13.6.3 -- juju destroy-controller -y --destroy-all-models --destroy-storage "$JUJU_CONTROLLER"
    ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=10 -i /var/lib/jenkins/.ssh/cdkbot_rsa -tt ubuntu@10.13.6.3 -- sudo systemctl restart snap.lxd.daemon.service


  execute: |
    #!/bin/bash
    set -eux

    . $WORKSPACE/cilib.sh

    inject_env

    tee overlay.yaml <<EOF> /dev/null
    series: $SERIES
    applications:
      kubernetes-master:
        options:
          channel: $SNAP_VERSION
          proxy-extra-args: "proxy-mode=userspace"
      kubernetes-worker:
        options:
          channel: $SNAP_VERSION
          proxy-extra-args: "proxy-mode=userspace"
      etcd:
        options:
          channel: 3.3/edge
    EOF


    tee setup <<EOF> /dev/null
    #!/bin/bash
    set -eux
    export PATH=/snap/bin:$PATH
    export JUJU_CONTROLLER=$JUJU_CONTROLLER
    export JUJU_MODEL=$JUJU_MODEL
    export JUJU_CLOUD=$JUJU_CLOUD
    export JUJU_DEPLOY_CHANNEL=$JUJU_DEPLOY_CHANNEL
    export SERIES=$SERIES
    export LC_ALL=C.UTF-8
    export LANG=C.UTF-8

    juju bootstrap localhost/localhost \
        $JUJU_CONTROLLER \
        -d $JUJU_MODEL \
        --bootstrap-series $SERIES \
        --force \
        --config juju-http-proxy=http://squid.internal:3128 \
        --config juju-https-proxy=http://squid.internal:3128 \
        --config juju-no-proxy=localhost,127.0.0.1,::1,10.23.105.0/24 \
        --model-default image-stream=daily \
        --model-default juju-http-proxy=http://squid.internal:3128 \
        --model-default juju-https-proxy=http://squid.internal:3128 \
        --model-default juju-no-proxy=localhost,127.0.0.1,::1,10.23.105.0/24

    juju deploy -m "$JUJU_CONTROLLER":"$JUJU_MODEL" \
        --channel $JUJU_DEPLOY_CHANNEL \
        --force \
        --overlay overlay.yaml \
        cs:~containers/charmed-kubernetes

    timeout 45m juju-wait -e $JUJU_CONTROLLER:$JUJU_MODEL -w

    pushd jenkins
    git pull || true
    TOX_WORK_DIR=.tox timeout 2h tox -e py36 -- pytest \
        jobs/integration/validation.py \
        --cloud localhost/localhost \
        --model $JUJU_MODEL \
        --controller $JUJU_CONTROLLER
    EOF

    chmod +x setup
    scp -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=10 -i /var/lib/jenkins/.ssh/cdkbot_rsa setup ubuntu@10.13.6.3:setup
    scp -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=10 -i /var/lib/jenkins/.ssh/cdkbot_rsa overlay.yaml ubuntu@10.13.6.3:overlay.yaml
    ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=10 -i /var/lib/jenkins/.ssh/cdkbot_rsa -tt ubuntu@10.13.6.3 -- bash setup
