meta:
  name: Verify CK with Vault
  description: |
    Verifies that CK with Vault passes integration tests
  long-description: |
    ## Requirements

    A valid AWS VPC must be created prior to running this test with a single
    subnet. That VPC-ID is then passed to the bootstrap config and
    model-defaults during the run.

    See: https://old-docs.jujucharms.com/2.5/en/charms-fan-aws-vpc
  mkdocs:
    destination:
      - "validations/ck/vault.md"

matrix:
  snap_version:
    - 1.19/edge
    - 1.18/edge
    - 1.17/edge
    - 1.16/edge
  series:
    - focal
    - bionic
    - xenial
  channel:
    - edge
  arch:
    - amd64

plan:
  env:
    - JUJU_DEPLOY_BUNDLE=cs:~containers/charmed-kubernetes
    - JUJU_DEPLOY_CHANNEL=$CHANNEL
    - JUJU_CLOUD=aws/us-east-1
    - JUJU_CONTROLLER=validate-ck-vault
    - JUJU_MODEL=validate-vault

  pre-execute: |
    #!/bin/bash
    . $WORKSPACE/cilib.sh

    setup_env

    juju bootstrap $JUJU_CLOUD $JUJU_CONTROLLER \
         -d $JUJU_MODEL \
         --bootstrap-series $SERIES \
         --force \
         --bootstrap-constraints arch=$ARCH \
         --model-default test-mode=true \
         --model-default resource-tags=owner=k8sci \
         --model-default image-stream=daily \
         --model-default vpc-id=vpc-0e4f11d0d4e9ba35f \
         --config vpc-id=vpc-0e4f11d0d4e9ba35f

    tee overlay.yaml <<EOF> /dev/null
    series: $SERIES
    applications:
      kubernetes-master:
        options:
          channel: $SNAP_VERSION
      kubernetes-worker:
        options:
          channel: $SNAP_VERSION
    EOF

    juju deploy -m $JUJU_CONTROLLER:$JUJU_MODEL \
          --overlay overlay.yaml \
          --force \
          --channel $JUJU_DEPLOY_CHANNEL $JUJU_DEPLOY_BUNDLE

    timeout 45m juju-wait -e $JUJU_CONTROLLER:$JUJU_MODEL -w

  execute: |
    #!/bin/bash
    set -eu

    . $WORKSPACE/cilib.sh

    inject_env

    timeout 2h pytest \
       $WORKSPACE/jobs/integration/validation.py \
       --cloud $JUJU_CLOUD \
       --model $JUJU_MODEL \
       --controller $JUJU_CONTROLLER

  post-execute: |
    #!/bin/bash
    . $WORKSPACE/cilib.sh

    inject_env

    collect_env

    teardown_env

