- vIOMMU.netperf:
    type = viommu_netperf
    vms = avocado-vt-vm1
    net_name = network_conn
    ip_attrs = {"netmask": "255.255.255.0", "address": "192.168.144.1", "dhcp_ranges": {"attrs": {"end": "192.168.144.254", "start": "192.168.144.2"}}}
    iface_attrs = {"source": {"network": "${net_name}"}, "type_name": "network", "model": "virtio"}
    network_attrs = {"name": "${net_name}", "forward": {"mode": "nat"}, "ips": [${ip_attrs}]}
    start_vm = "no"
    variants:
        - virtio:
            only q35, aarch64
            func_supported_since_libvirt_ver = (8, 3, 0)
            iommu_dict = {'model': 'virtio'}
        - intel:
            only q35
            start_vm = "yes"
            enable_guest_iommu = "yes"
            iommu_dict = {'model': 'intel', 'driver': {'intremap': 'on', 'caching_mode': 'on', 'eim': 'on', 'iotlb': 'on', 'aw_bits': '48'}}
        - smmuv3:
            only aarch64
            func_supported_since_libvirt_ver = (5, 5, 0)
            iommu_dict = {'model': 'smmuv3'}
    variants:
        - e1000e:
            only q35
            iface_model = 'e1000e'
            iface_dict = {'type_name': 'network', 'model': '${iface_model}', 'source': {'network': 'default'}}
        - virtio_interface:
            interface_driver_name = "vhost"
            interface_driver = {'driver_attr': {'name': '${interface_driver_name}', 'iommu': 'on'}}
            iface_dict = {'type_name': 'network', 'model': 'virtio', 'driver': ${interface_driver}, 'source': {'network': 'default'}}
    variants:
        - guest2guest:
            vms = avocado-vt-vm1 vm2
            netperf_client = avocado-vt-vm1
            netperf_server = vm2
        - host2guest:
            netperf_client = ${local_ip}
            netperf_server = ${main_vm}
        - guest2host:
            netperf_client = ${main_vm}
            netperf_server = ${local_ip}
            UDP_STREAM:
                extra_cmd_opts = "-- -R 1"
    variants:
        - TCP_STREAM:
            test_protocol = TCP_STREAM
        - UDP_STREAM:
            test_protocol = UDP_STREAM
