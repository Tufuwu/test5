- nvdimm:
    type = nvdimm
    start_vm = no
    nvdimm_file_size = '512M'
    cpuxml_mode = host-model
    aarch64:
        cpuxml_mode = host-passthrough
    variants:
        - back_file:
            nvdimm_file = /tmp/nvdimm
            cpuxml_check = partial
            cpuxml_fallback = allow
            nvdimmxml_mem_model = nvdimm
            nvdimmxml_mem_access = shared
            nvdimmxml_source_path = ${nvdimm_file}
            variants:
                - label:
                    check = label_back_file
                    test_str = 'This is a test with label'
                    test_file = 'foo-label'
                    cpuxml_numa_cell = [{'id': '0', 'cpus': '0-1', 'memory': '512', 'unit': 'M'}, {'id': '1', 'cpus': '2-3', 'memory': '512', 'unit': 'M'}]
                    nvdimmxml_target_size = 512
                    nvdimmxml_target_size_unit = M
                    nvdimmxml_target_node = 1
                    nvdimmxml_label_size = 256
                    nvdimmxml_label_size_unit = KiB
                    nvdimmxml_address_slot = 0
                    setvm_max_mem_rt_slots = 16
                    setvm_max_mem_rt = 2048
                    setvm_max_mem_rt_unit = M
                    setvm_max_mem = 1024
                    setvm_max_mem_unit = M
                    setvm_current_mem = 1024
                    setvm_current_mem_unit = M
                    setvm_vcpu = 4
                    setvm_placement = static
                    pseries:
                    variants:
                        - default:
                        - check_life_cycle:
                            check_life_cycle = "yes"
                            error_msg_1 = "unsupported configuration: revert to external snapshot not supported yet"
                            error_msg_2 = "internal error: Invalid target domain state 'disk-snapshot'. Refusing snapshot reversion"
                        - discard:
                            check = discard
                            nvdimmxml_discard = yes
                            status_error = yes
                            error_msg = 'discard is not supported for nvdimms'
                        - pmem_alignsize:
                            check = pmem_alignsize
                            pmem_support_check_cmd = "yum deplist qemu-kvm-core | grep libpmem"
                            nvdimm_file_path = '/tmp/nvdimm'
                            alignsize = 2048
                            vm_attrs = {'max_mem_rt': 8192, 'max_mem_rt_slots': 8, 'max_mem_rt_unit': 'M', 'vcpu': 4, 'cpu': {'mode': '${cpuxml_mode}', 'numa_cell': [{'id': '0', 'cpus': '0-1', 'memory': '2097152', 'unit': 'K'}, {'id': '1', 'cpus': '2-3', 'memory': '2097152', 'unit': 'K'}]}}
                            mem_device_attrs = {'mem_model': 'nvdimm', 'source': {'path': '${nvdimm_file_path}', 'alignsize': ${alignsize}, 'alignsize_unit': 'K', 'pmem': True}, 'target': {'size': 512, 'size_unit': 'M', 'node': 1, 'readonly': True, 'label': {'size': 128, 'size_unit': 'KiB'}}}
                            qemu_checks = "align.*pmem"
                            error_msg = "['pwrite.* failed: Operation not permitted', 'wrong fs type, bad option, bad superblock on /dev/pmem0']"
                        - with_uuid:
                            only pseries
                            nvdimmxml_uuid = '8ec948ec-8898-46af-889c-470b50297999'
                            variants:
                                - access_private:
                                    nvdimmxml_mem_access = 'private'
                                    qemu_checks = nvdimm=on`mem-path=${nvdimm_file},share=no`-device nvdimm,node=1,label-size=262144,uuid=${nvdimmxml_uuid}
                        - invalid_target_size:
                            only pseries
                            status_error = yes
                            variants:
                                - less_than_256:
                                    check = 'less_than_256'
                                    nvdimmxml_target_size = 255
                                    nvdimmxml_label_size = 128
                                    error_msg = 'minimum target size for the NVDIMM must be 256MB plus the label size'
                - no_label:
                    check = back_file
                    test_str = 'test no label'
                    cpuxml_topology = {'sockets': '2', 'cores': '1', 'threads': '1'}
                    cpuxml_numa_cell = [{'id': '0', 'cpus': '0-1', 'memory': '1048576', 'unit': 'KiB'}]
                    nvdimmxml_target_size = 524288
                    nvdimmxml_target_size_unit = KiB
                    nvdimmxml_target_node = 0
                    nvdimmxml_address_slot = 0
                    setvm_max_mem_rt_slots = 16
                    setvm_max_mem_rt = 2097852
                    setvm_max_mem_rt_unit = KiB
                    setvm_max_mem = 1572864
                    setvm_max_mem_unit = KiB
                    setvm_current_mem = 1048576
                    setvm_current_mem_unit = KiB
                    setvm_vcpu = 2
                    setvm_placement = static
                    pseries:
                        check = ppc_no_label
                        status_error = yes
                        error_msg = 'label size is required for NVDIMM device'
        - hot_plug:
            check = hot_plug
            nvdimm_file = /tmp/nvdimm
            nvdimmxml_mem_model = nvdimm
            nvdimmxml_mem_access = shared
            nvdimmxml_source_path = ${nvdimm_file}
            nvdimmxml_target_size = 512
            nvdimmxml_target_size_unit = M
            nvdimmxml_target_node = 1
            nvdimmxml_label_size = 256
            nvdimmxml_label_size_unit = KiB
            nvdimmxml_address_slot = 0
            nvdimm_file_2 = /tmp/nvdimm2
            nvdimmxml2_mem_model = nvdimm
            nvdimmxml2_mem_access = shared
            nvdimmxml2_source_path = ${nvdimm_file_2}
            nvdimmxml2_target_size = 256
            wait_sec = 5
            pseries:
                nvdimmxml2_target_size = 512
            nvdimmxml2_target_size_unit = M
            nvdimmxml2_target_node = 1
            nvdimmxml2_label_size = 128
            nvdimmxml2_label_size_unit = KiB
            nvdimmxml2_address_slot = 1
            cpuxml_check = partial
            cpuxml_fallback = allow
            cpuxml_topology = {'sockets': '2', 'cores': '2', 'threads': '1'}
            cpuxml_numa_cell = [{'id': '0', 'cpus': '0-1', 'memory': '1024', 'unit': 'M'}, {'id': '1', 'cpus': '2-3', 'memory': '512', 'unit': 'M'}]
            setvm_max_mem_rt_slots = 16
            setvm_max_mem_rt = 2560
            setvm_max_mem_rt_unit = M
            setvm_max_mem = 1536
            setvm_max_mem_unit = M
            setvm_current_mem = 1024
            setvm_current_mem_unit = M
            setvm_vcpu = 4
            setvm_placement = static
