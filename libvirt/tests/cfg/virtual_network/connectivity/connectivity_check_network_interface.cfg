- virtual_network.connectivity_check.network_interface:
    type = connectivity_check_network_interface
    vms = avocado-vt-vm1 vm2
    outside_ip = 'www.redhat.com'
    net_name = network_conn
    ipv4_attrs = {'netmask': '255.255.255.0', 'address': '192.168.144.1', 'dhcp_ranges': {'attrs': {'end': '192.168.144.254', 'start': '192.168.144.2'}}}
    ipv6_attrs = {'dhcp_ranges': {'attrs': {'end': '2001:db8:ca2:2::ff', 'start': '2001:db8:ca2:2::10'}}, 'address': '2001:db8:ca2:2::1', 'family': 'ipv6', 'prefix': '64'}
    iface_attrs = {'source': {'network': '${net_name}'}, 'type_name': 'network', 'model': 'virtio'}
    variants forward_mode:
        - nat:
            forward = 'forward': {'mode': '${forward_mode}', 'nat_attrs': {'ipv6': 'yes'}},
            vm_ping_outside = pass
            vm_ping_host_public = pass
            vm_ping_host_virbr = pass
            vm_ping_ep_vm = pass
            host_ping_vm = pass
        - route:
            forward = 'forward': {'mode': '${forward_mode}'},
            vm_ping_outside = fail
            vm_ping_host_public = pass
            vm_ping_host_virbr = pass
            vm_ping_ep_vm = pass
            host_ping_vm = pass
        - isolated:
            forward = ''
            vm_ping_outside = fail
            vm_ping_host_public = fail
            vm_ping_host_virbr = pass
            vm_ping_ep_vm = pass
            host_ping_vm = pass
        - open:
            forward = 'forward': {'mode': '${forward_mode}'},
    network_attrs = {'name': '${net_name}', ${forward} 'ips': [${ipv4_attrs}, ${ipv6_attrs}]}
