- virtual_network.update_device.iface_with_identifier:
    type = update_iface_with_identifier
    start_vm = no
    timeout = 240
    iface_a_attrs = {'source': {'network': 'default'}, 'model': 'virtio', 'type_name': 'network', 'alias': {'name': alias_a}}
    iface_b_attrs = {'source': {'network': 'default'}, 'model': 'virtio', 'type_name': 'network', 'alias': {'name': alias_b}}
    update_attrs = {'link_state': 'down'}
    err_msg_matching = device not found: no device found at address .* matching MAC address .* and alias .*
    variants scenario:
        - mac_only:
            del_tags = ['alias', 'address']
            status_error = no
        - alias_only:
            del_tags = ['address', 'mac']
            status_error = no
            update:
                status_error = yes
                err_msg = cannot change network interface mac address from .* to .*
        - pci_address_only:
            del_tags = ['alias', 'mac']
            status_error = no
            update:
                status_error = yes
                err_msg = cannot change network interface mac address from .* to .*
        - right_mac_alias_wrong_pci:
            no s390-virtio
            status_error = yes
            err_msg = ${err_msg_matching}
            update_attrs = {'link_state': 'down'}
            update_pci = yes
        - right_mac_pci_wrong_alias:
            status_error = yes
            err_msg = ${err_msg_matching}
            update_attrs = {'link_state': 'down', 'alias': {'name': rand_alias}}
        - wrong_mac_right_alias_pci:
            status_error = yes
            err_msg = ${err_msg_matching}
            update_attrs = {'link_state': 'down', 'mac_address': rand_mac}
    variants operation:
        - update:
        - hotunplug:
