- pcie_root_port_controller:
    type = pcie_root_port_controller
    start_vm = "no"
    controller_type = "pci"
    controller_model = "pcie-root-port"
    controller_target = '{"chassis":1,"port":"0x8"}'
    slot_equal_after_define = "yes"
    variants:
        - positive_test:
            status_error = "no"
            variants:
                - controllers_different_chassis_same_port:
                    second_controller_model = "pcie-root-port"
                    second_controller_target = "{'chassis':2,'port':'0x8'}"
                - address_slot_too_low:
                    check_slot = "yes"
                    wipe_devices = "yes"
                    test_define_only = "yes"
                    controller_address = '{"type": "pci", "domain": "0x0000", "bus": "0x00", "slot": "0x00", "function":"0x0"}'
                    slot_equal_after_define = "no"
                - address_slot_min_value:
                    check_slot = "yes"
                    wipe_devices = "yes"
                    test_define_only = "yes"
                    controller_address = '{"type": "pci", "domain": "0x0000", "bus": "0x00", "slot": "0x03", "function":"0x0"}'
        - negative_test:
            status_error = "yes"
            variants:
                - device_slot_invalid:
                    test_define_only = "yes"
                    interface_slot = "a"
                    minimal_interface_dict = '{"source": {"network": "default"}}'
                    failure_message = "Invalid value for attribute 'slot' in element 'address': 'a'. Expected .*integer value"
                - device_slot_wrong_number:
                    test_define_only = "yes"
                    interface_slot_type = "hex"
                    interface_slot = 1
                    minimal_interface_dict = '{"source": {"network": "default"}, "model": "virtio"}'
                    failure_message = "Invalid PCI address .* slot must be <= 0"
                - controllers_same_chassis_same_port:
                    second_controller_model = "pcie-root-port"
                    second_controller_target = "{'chassis':1,'port':'0x8'}"
                - controllers_same_chassis_different_port:
                    second_controller_model = "pcie-root-port"
                    second_controller_target = "{'chassis':1,'port':'0x4'}"
                - model_name_invalid:
                    test_define_only = "yes"
                    controller_model = "dmi-to-pci-bridge"
                - index_equals_address_bus:
                    test_define_only = "yes"
                    controller_address = '{"type": "pci", "domain": "0x0000", "slot": "0x1", "function":"0x0"}'
                    failure_message = ".*The device at PCI address .* cannot be plugged into the PCI controller with index='.*'. It requires a controller that accepts a pcie\-root\-port.*"
                - index_less_than_address_bus:
                    bus_offset = 1
                    test_define_only = "yes"
                    controller_address = '{"type": "pci", "domain": "0x0000", "slot": "0x1", "function":"0x0"}'
                    failure_message = ".*a PCI slot is needed to connect a PCI controller model='pcie\-root\-port', but none is available, and it cannot be automatically added.*"
                - controller_index_zero:
                    test_define_only = "yes"
                    controller_index = 0
                    failure_message = "XML error: Multiple 'pci' controllers with index '0'"
                - controller_index_too_high:
                    test_define_only = "yes"
                    controller_index = 256
                    failure_message = "internal error: a PCI slot is needed to connect a PCI controller model='pcie\-root\-port', but none is available, and it cannot be automatically added"
                - controller_index_invalid:
                    test_define_only = "yes"
                    controller_index = "invalid_index"
                    failure_message = "Invalid value for attribute 'index' in element 'controller': '${controller_index}'. Expected integer value|internal error: Cannot parse controller index ${controller_index}"
                - chassis_less_than_valid:
                    test_define_only = "yes"
                    controller_target = '{"chassis":-1,"port":"0x8"}'
                    failure_message = "XML error: Invalid value for attribute 'chassis' in element 'target': '-1'. Expected non-negative value"
                    func_supported_since_libvirt_ver = (8, 8, 0)
                    unsupported_err_msg = "Chassis value -1 behaves incorrectly in libvirt version less than 8.8.0"
                - chassis_greater_than_valid:
                    test_define_only = "yes"
                    controller_target = '{"chassis":256,"port":"0x8"}'
                    failure_message = "PCI controller chassis '256' out of range - must be 0-255"
                - chassis_invalid:
                    test_define_only = "yes"
                    controller_target = '{"chassis":"a","port":"0x8"}'
                    failure_message = "XML error: Invalid value for attribute 'chassis' in element 'target': 'a'. Expected integer value"
                - address_slot_too_high:
                    wipe_devices = "yes"
                    test_define_only = "yes"
                    controller_address = '{"type": "pci", "domain": "0x0000", "bus": "0x02", "slot": "0x20", "function":"0x0"}'
                    failure_message = "Invalid PCI address slot='0x20', must be <= 0x1F"
