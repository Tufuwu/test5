- guest_os_booting.ovmf_firmware_feature:
    type =  ovmf_firmware_feature
    start_vm = no
    loader_path = "/usr/share/edk2/ovmf/OVMF_CODE.secboot.fd"
    nvram_template = "/usr/share/edk2/ovmf/OVMF_VARS.secboot.fd"
    firmware_type = "ovmf"
    only q35, aarch64
    variants:
        - positive_test:
            status_error = "no"
            variants:
                - enable_secure_boot:
                    no aarch64
                    firmware_dict = {'os_firmware': 'efi', 'firmware': {'feature': [{'enabled': 'yes', 'name': 'enrolled-keys'}, {'enabled': 'yes', 'name': 'secure-boot'}]}}
                    firmware_xpath = [{'element_attrs': ["./os/nvram[@template='${nvram_template}']"]}, {'element_attrs': ["./os/loader[@type='pflash']"], 'text': '${loader_path}'}]
                - disable_secure_boot:
                    no aarch64
                    nvram_template = "/usr/share/edk2/ovmf/OVMF_VARS.fd"
                    firmware_dict = {'os_firmware': 'efi', 'firmware': {'feature': [{'enabled': 'no', 'name': 'enrolled-keys'}, {'enabled': 'yes', 'name': 'secure-boot'}]}}
                    firmware_xpath = [{'element_attrs': ["./os/nvram[@template='${nvram_template}']"]}, {'element_attrs': ["./os/loader[@type='pflash']"], 'text': '${loader_path}'}]
                - not_support_secure_boot:
                    func_supported_since_libvirt_ver = (9, 0, 0)
                    loader_path = "/usr/share/edk2/ovmf/OVMF_CODE.fd"
                    nvram_template = "/usr/share/edk2/ovmf/OVMF_VARS.fd"
                    aarch64:
                        loader_path = "/usr/share/edk2/aarch64/QEMU_EFI-silent-pflash.qcow2"
                        nvram_template = "/usr/share/edk2/aarch64/vars-template-pflash.qcow2"
                    firmware_dict = {'os_firmware': 'efi', 'firmware': {'feature': [{'enabled': 'no', 'name': 'enrolled-keys'}, {'enabled': 'no', 'name': 'secure-boot'}]}}
                    firmware_xpath = [{'element_attrs': ["./os/nvram[@template='${nvram_template}']"]}, {'element_attrs': ["./os/loader[@readonly='yes']"], 'text': '${loader_path}'}]
        - negative_test:
            status_error = "yes"
            variants:
                - invalid_config:
                    firmware_dict = {'os_firmware': 'efi', 'firmware': {'feature': [{'enabled': 'yes', 'name': 'enrolled-keys'}, {'enabled': 'no', 'name': 'secure-boot'}]}}
                    error_msg = "firmware feature 'enrolled-keys' cannot be enabled when firmware feature 'secure-boot' is disabled"
