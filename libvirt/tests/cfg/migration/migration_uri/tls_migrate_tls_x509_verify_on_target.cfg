- migration.migration_uri.network_data_transport.tls.migrate_tls_x509_verify_on_target:
    type = tls_migrate_tls_x509_verify
    migration_setup = 'yes'
    storage_type = 'nfs'
    setup_local_nfs = 'yes'
    disk_type = "file"
    disk_source_protocol = "netfs"
    mnt_path_name = ${nfs_mount_dir}
    # Console output can only be monitored via virsh console output
    only_pty = True
    take_regular_screendumps = no
    # Extra options to pass after <domain> <desturi>
    virsh_migrate_extra = ''
    # SSH connection time out
    ssh_timeout = 60
    # Local URI
    virsh_migrate_connect_uri = 'qemu:///system'
    virsh_migrate_dest_state = "running"
    virsh_migrate_src_state = "shut off"
    image_convert = 'no'
    server_ip = "${migrate_dest_host}"
    server_user = "root"
    server_pwd = "${migrate_dest_pwd}"
    status_error = "no"
    check_network_accessibility_after_mig = "yes"
    migrate_desturi_port = "16509"
    migrate_desturi_type = "tcp"
    virsh_migrate_desturi = "qemu+tcp://${migrate_dest_host}/system"
    custom_pki_path = "/etc/pki/qemu"
    qemu_tls = "yes"
    server_cn = "ENTER.YOUR.EXAMPLE.SERVER_CN"
    client_cn = "ENTER.YOUR.EXAMPLE.CLIENT_CN"
    qemu_conf_path = '/etc/libvirt/qemu.conf'
    cert_path = "${custom_pki_path}/client-cert.pem"
    tmp_cert_path = "/tmp/client-cert.pem"
    transport_type = "tls"
    test_case = "migrate_tls_x509_verify_on_target"
    virsh_migrate_extra = "--tls"
    variants:
        - p2p:
            virsh_migrate_options = '--live --p2p --verbose'
        - non_p2p:
            virsh_migrate_options = '--live --verbose'
    variants:
        - both_to_default:
            # Use default value for default_tls_x509_verify and migrate_tls_x509_verify
            default_qemu_conf = ["default_tls_x509_verify", "migrate_tls_x509_verify"]
            err_msg = "Cannot read from TLS channel"
            migrate_again = "yes"
            status_error = "yes"
            migrate_again_status_error = "no"
        - set_migrate_to_0:
            default_qemu_conf = ["default_tls_x509_verify"]
            qemu_conf_dest = '{r".*migrate_tls_x509_verify\s*=.*": "migrate_tls_x509_verify=0"}'
            status_error = "no"
        - set_default_to_0:
            default_qemu_conf = ["migrate_tls_x509_verify"]
            qemu_conf_dest = '{r".*default_tls_x509_verify\s*=.*": "default_tls_x509_verify=0"}'
            status_error = "no"
        - set_default_to_0_and_migrate_to_1:
            qemu_conf_dest = '{r".*default_tls_x509_verify\s*=.*": "default_tls_x509_verify=0", r".*migrate_tls_x509_verify\s*=.*": "migrate_tls_x509_verify=1"}'
            err_msg = "Cannot read from TLS channel"
            migrate_again = "yes"
            status_error = "yes"
            migrate_again_status_error = "no"
        - set_default_to_1_and_migrate_to_0:
            qemu_conf_dest = '{r".*default_tls_x509_verify\s*=.*": "default_tls_x509_verify=1", r".*migrate_tls_x509_verify\s*=.*": "migrate_tls_x509_verify=0"}'
            status_error = "no"
        - set_default_to_1:
            default_qemu_conf = ["migrate_tls_x509_verify"]
            qemu_conf_dest = '{r".*default_tls_x509_verify\s*=.*": "default_tls_x509_verify=1"}'
            err_msg = "Cannot read from TLS channel"
            migrate_again = "yes"
            status_error = "yes"
            migrate_again_status_error = "no"
