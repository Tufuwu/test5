- qemu_img_negative:
    variants:
        - rebase:
            only qcow2
            type = rebase_negative_test
            images = "base sn"
            image_name_base = "images/rebase_negative_base"
            image_name_sn = "images/rebase_negative_sn"
            force_create_image_base = yes
            force_create_image_sn = yes
            remove_image_base = yes
            remove_image_sn = yes
            rebase_mode = safe
            image_format = qcow2
            image_boot = no
            kill_vm = yes
            start_vm = no
            negtive_test_sn = yes
            variants:
                - nonexist_old_backing_file:
                    rebase_list = "sn > base"
                    required_qemu = [, 4.1.0)
                - nonexist_new_backing_file:
                    images += " new"
                    image_chain = "base sn"
                    image_name_new = "images/rebase_negative_new"
                    create_image_new = no
                    rebase_list = "sn > new"
        - luks_with_non_utf8_secret:
            required_qemu = [4.2.0-23, )
            only luks
            type = image_creation_luks_with_non_utf8_secret
            start_vm = no
            create_image = no
            images = stg
            err_info = "Data from secret\s+\w+\s+is not valid UTF-8"
            echo_non_utf8_secret_cmd = "echo -n -e '\x3a\x3c\x3b\xff' > %s"
            qemu_img_create_cmd = "qemu-img create -f luks --object secret,id=sec0,file=%s -o key-secret=sec0 %s 10M"
            image_name_stg = "images/stg"
            remove_image_stg = yes
        - luks_inside_qcow2_with_non_utf8_secret:
            required_qemu = [6.0.0-16, )
            only qcow2
            type = image_creation_luks_with_non_utf8_secret
            start_vm = no
            create_image = no
            images = stg
            err_info = "Data from secret\s+\w+\s+is not valid UTF-8"
            echo_non_utf8_secret_cmd = "echo -n -e '\x3a\x3c\x3b\xff' > %s"
            qemu_img_create_cmd = "qemu-img create -f qcow2 --object secret,id=sec0,file=%s -o encrypt.format=luks,encrypt.key-secret=sec0 %s 10M"
            image_name_stg = "images/stg"
            remove_image_stg = yes
        - snapshot:
            only qcow2
            type = snapshot_negative_test
            start_vm = no
            create_image = no
            variants:
                - with_incorrect_format:
                    test_scenario = run_cmd_with_incorrect_format
                    images = stg
                    image_name_stg = "images/stg"
                    image_format_stg = raw
                    image_size_stg = 1G
                    remove_image_stg = yes
                    err_info = "Image is not in qcow2 format"
                    cmd_with_incorrect_format = "qemu-img create -f qcow2 sn.qcow2 -b %s -F qcow2;"
                    cmd_with_incorrect_format += "qemu-img create -f qcow2 sn.qcow2 -b %s -o backing_fmt=qcow2;"
                    cmd_with_incorrect_format += "qemu-img create -f qcow2 sn.qcow2 -o backing_file=%s -o backing_fmt=qcow2;"
                    cmd_with_incorrect_format += "qemu-img create -f qcow2 sn.qcow2 -o backing_file=%s -F qcow2"
                - with_non_existing_backing_file:
                    test_scenario = run_cmd_with_non_existing_backing_file
                    err_info = "(Could not open 'base.qcow2': No such file or directory|Could not open backing image)"
                    cmd_with_non_existing_backing_file = "qemu-img create -f qcow2 -F qcow2 -b base.qcow2 sn.qcow2;"
                    cmd_with_non_existing_backing_file += "qemu-img create -f qcow2 -F qcow2 -b base.qcow2 sn.qcow2 1G;"
                    cmd_with_non_existing_backing_file += "qemu-img create -f qcow2 sn.qcow2 -b ssh://xen/"
                - with_empty_string_for_backing_file:
                    test_scenario = run_cmd_with_empty_string_for_backing_file
                    err_info = "Expected backing file name, got empty string"
                    cmd_with_empty_string_for_backing_file = "qemu-img create -f qcow2 -b '' foo"
