- check_clock_offset:
    qemu_stop = off
    rtc_clock = host
    rtc_base = utc
    i386, x86_64:
        rtc_drift = slew
    requires_root = yes
    ntp_server = "clock.redhat.com"
    ntp_cmd = "(systemctl stop chronyd || service ntpdate stop)"
    ntp_cmd += " && (chronyd -q 'server clock.redhat.com iburst'"
    ntp_cmd +=  " || ntpdate clock.redhat.com)"
    ntp_query_cmd = "chronyd -Q 'server clock.redhat.com iburst'"
    ntp_query_cmd += " || ntpdate -q clock.redhat.com"
    Windows:
        ntp_cmd = "ping -n 6 -w 1000 127.0.0.1>nul && w32tm /config /manualpeerlist:${ntp_server} /syncfromflags:manual /update"
        ntp_query_cmd = "w32tm /stripchart /computer:${ntp_server} /samples:1 /dataonly"
        ntp_host_cmd = "(systemctl stop chronyd || service ntpdate stop)"
        ntp_host_cmd += " && (chronyd -q 'server clock.redhat.com iburst'"
        ntp_host_cmd +=  " || ntpdate clock.redhat.com)"
    variants:
        - with_syscall:
            type = timedrift_check_with_syscall
            start_vm = yes
            only Linux
            no JeOS
            tmp_dir = "/tmp"
            result_file = "clktest.log"
            build_cmd = "gcc -lrt ${tmp_dir}/clktest.c -o clktest"
            test_cmd = "./clktest"
            check_timeout = 300
        - when_crash:
            type = timedrift_check_when_crash
            start_vm = no
            ntp_server = "clock.redhat.com"
            sleep_time = 1800
            extra_params += " -no-shutdown"
            variants:
                - bsod:
                    only Windows
                    nmi_cmd = "monitor:inject-nmi"
                    w32time_conf_cmd = "sc config w32time start=auto"
                - hang:
                    kill_vm = yes
                    # Notes:
                    # please stop kernel crash recovery service like 'kdump' before trigger kernek panic,
                    # else guest will reboot immedicately that is unexpected in this test;
                    only Linux
                    nmi_cmd = "guest: echo '1' > /proc/sys/kernel/sysrq && echo '0' > /proc/sys/kernel/panic && service kdump stop; echo 'c' > /proc/sysrq-trigger"
        - hotplug_vcpu:
            no aarch64
            type = timedrift_check_when_hotplug_vcpu
            start_vm = yes
            smp = 4
            vcpu_sockets = 2
            vcpu_devices = vcpu1
            vcpus_maxcpus = 6
            query_internal = 600
            query_times = 4
            drift_threshold = 3
            w32time_conf_cmd = "sc config w32time start=auto"
        - non_event:
            only RHEL
            no aarch64
            type = timedrift_check_non_event
            start_vm = yes
            monitor_type = qmp
            hwclock_time_command = "LC_TIME=C hwclock -u"
            hwclock_time_filter_re = "(\d+-\d+-\d+ \d+:\d+:\d+).*"
            hwclock_time_format = "%Y-%m-%d %H:%M:%S"
            RHEL.6, RHEL.7:
                hwclock_time_filter_re = "(\S+ \S+\s+\d+ \d+:\d+:\d+ \d+).*"
                hwclock_time_format = "%a %b %d %H:%M:%S %Y"
            time_forward = 3600
            hwclock_forward_cmd = 'hwclock --set --date "${time_forward} seconds"'
            drift_threshold = 3
        - after_load_vm:
            no ovmf
            only i386 x86_64 ppc64le ppc64
            only Linux
            type = timedrift_check_after_load_vm
            start_vm = no
            clocksource = "kvm-clock"
            ppc64le,ppc64:
                clocksource = "timebase"
            cmd_check_qgaservice = journalctl -e | grep -Ei "syslog is obsolete|ERROR|FAILED|WARNING|FAIL"
            # /qga_setup_fail.log is saved during guest preinstall phase, if you don't have this file, please skip this parameter.
            cmd_check_qga_installlog = "ls /qga_setup_fail.log"
            # please fill the 'qga_rpm_path' if want to install specified version, form like "qga_rpm_path = ' '"
            qga_rpm_path = "/qemu-guest-agent"
            # Please update your file share web server url before test
            download_root_url = <your_server_url>
            gagent_name = "org.qemu.guest_agent.0"
            gagent_install_cmd = "yum install -y qemu-guest-agent"
            gagent_restart_cmd = "systemctl restart qemu-guest-agent.service"
            gagent_start_cmd = "systemctl start qemu-guest-agent"
            gagent_stop_cmd = "systemctl stop qemu-guest-agent"
            gagent_status_cmd = "systemctl status qemu-guest-agent"
            RHEL.6:
                gagent_restart_cmd = "service qemu-ga restart"
                gagent_start_cmd = "service qemu-ga start"
                gagent_stop_cmd = "service qemu-ga stop"
                gagent_status_cmd = "service qemu-ga status"
            gagent_pkg_check_cmd = "rpm -q qemu-guest-agent"
            gagent_serial_type = virtio
            serials += " org.qemu.guest_agent.0"
            serial_type_org.qemu.guest_agent.0 = "virtserialport"
            qmp_savevm_cmd = "savevm tag=sn1"
            qmp_loadvm_cmd = "loadvm tag=sn1"
            i386, x86_64:
                qmp_rtc_reset_cmd = "rtc-reset-reinjection"
                check_mod_cmd = "cat /sys/module/kvm/parameters/kvmclock_periodic_sync"
            # The expected time dirft is 3 seconds.
            expected_time_drift = 3
            # Check time drift after 10/20/30 minutes.
            sleep_time = 600
            sleep_iteration_times = 3
