# The following testing scenario is covered:
#   Basic block stream test based on an existed snapshot
#     data -> sn1 -> sn2 -> sn3 -> sn4
#     The snapshot images are local fs images
#     block-strem: {device: sn4, base-node: data}

- blockdev_stream_backing_mask_on:
    only Linux
    qemu_force_use_drive_expression = no
    type = blockdev_stream_backing_mask_on
    virt_test_type = qemu
    start_vm = yes
    kill_vm = yes
    images += " data"
    base_tag = data
    node = drive_data
    remove_image_data = yes
    force_create_image_data = yes
    snapshot_images = "sn1 sn2 sn3 sn4"
    snapshot_tag = sn4
    base_node = drive_data
    tempfile_size = 200M
    storage_pools = default
    storage_pool = default
    rebase_mode = unsafe
    required_qemu = [9.0.0,)

    image_size_data = 2G
    image_size_sn1 = ${image_size_data}
    image_size_sn2 = ${image_size_data}
    image_size_sn3 = ${image_size_data}
    image_size_sn4 = ${image_size_data}
    image_name_data = data
    image_name_sn1 = sn1
    image_name_sn2 = sn2
    image_name_sn3 = sn3
    image_name_sn4 = sn4
    image_format_data = raw
    image_format_sn1 = qcow2
    image_format_sn2 = qcow2
    image_format_sn3 = qcow2
    image_format_sn4 = qcow2
    ceph:
        enable_ceph_data = yes
    nbd:
        enable_nbd_data = yes
        nbd_port_data = 10831
        image_format_data = raw
        remove_image_data = no
        force_create_image_data = no
    iscsi_direct:
        lun_data = 1
        enable_iscsi_data = yes
        image_raw_device_data = yes

    # For the local snapshot images
    storage_type_default = directory
    enable_iscsi_sn4 = no
    enable_ceph_sn4 = no
    enable_nbd_sn4 = no
    image_raw_device_sn4 = no
