# Network storage backends:
#   gluster_direct
#   nbd
#   iscsi_direct
#   ceph
# The following testing scenarios are covered:
#   - with_local_image
#       boot from remote storage with a local image attached
#   - with_remote_images
#       boot VM with another 3 remote images, check if there
#       is memory leak for qemu-kvm
#   - with_debug
#       boot VM with valid and invalid debug levels, make sure
#       the VM can start up without any error
#   - with_nbd_boot_image
#       - xpt_raw_as_raw_format_raw
#         create a raw image
#         export the raw image in raw format
#         convert system image to the exported image
#         boot from the exported image in raw format
#       - xpt_qcow2_as_raw_format_qcow2
#         create a qcow2(full/falloc) image
#         export the qcow2 image in raw format
#         convert system image to the exported image
#         boot from the exported image in qcow2 format
#       - xpt_luks_as_raw_format_luks
#         create a luks image
#         export the luks image in raw format
#         convert system image to the exported image
#         boot from the exported image in luks format
#       - xpt_qcow2_as_qcow2_format_raw
#         create a qcow2(no preallocation) image
#         export the qcow2 image in qcow2 format
#         convert system image to the exported image
#         boot from the exported image in raw format
#       - xpt_luks_as_luks_format_raw
#         create a luks image
#         export the luks image in luks format
#         convert system image to the exported image
#         boot from the exported image in raw format
#   - repeated_reboot
#       repeated reboot testing

- boot_from_remote_storage:
    type = boot_from_remote
    virt_test_type = qemu
    bootindex_image1 = 0
    variants:
        - repeated_reboot:
            only iscsi_direct ceph gluster_direct nbd
            type = boot
            reboot_count = 5
            reboot_method = shell
            login_timeout = 480
        - with_nbd_boot_image:
            only nbd
            type = boot_from_nbd_image
            start_vm = 'no'

            # The following is specified for a local image 'stg0',
            # used for qemu-nbd export with ip access
            local_image_tag = 'stg0'
            image_name_stg0 = images/stg0
            images += ' ${local_image_tag}'
            enable_nbd_stg0 = 'no'
            storage_type_stg0 ='filesystem'
            remove_image_stg0 = 'yes'
            nbd_port_stg0 = 10850

            # The following is specified for nbd image 'stg1',
            # i.e. the exported 'stg0', used for nbd image accessing
            convert_target = 'stg1'
            nbd_port_stg1 = ${nbd_port_stg0}
            variants:
                - xpt_raw_as_raw_format_raw:
                    image_format_stg1 = 'raw'
                    image_format_stg0 = 'raw'
                    nbd_export_format_stg0 = 'raw'
                - xpt_qcow2_as_raw_format_qcow2:
                    only Host_RHEL.m8 Host_RHEL.m7.u2 Host_RHEL.m7.u3
                    image_format_stg1 = 'qcow2'
                    image_format_stg0 = 'qcow2'
                    nbd_export_format_stg0 = 'raw'
                    variants:
                        - falloc:
                            preallocated = falloc
                        - full:
                            preallocated = full
                - xpt_luks_as_raw_format_luks:
                    image_format_stg1 = 'luks'
                    image_format_stg0 = 'luks'
                    nbd_export_format_stg0 = 'raw'
                    image_secret = redhat
                - xpt_qcow2_as_qcow2_format_raw:
                    image_format_stg1 = 'raw'
                    image_format_stg0 = 'qcow2'
                    nbd_export_format_stg0 = 'qcow2'
                - xpt_luks_as_luks_format_raw:
                    image_format_stg1 = 'raw'
                    image_format_stg0 = 'luks'
                    nbd_export_format_stg0 = 'luks'
                    image_secret = redhat
        - with_debug:
            only gluster_direct
            scenario = boot_with_debug
            debug_level_low = 0
            debug_level_high = 9
        - with_local_image:
            only gluster_direct
            scenario = boot_with_local_image
            images += " stg"
            image_size_stg = 1G
            image_name_stg = images/stg
            enable_gluster_stg = no
            remove_image_stg = yes
            force_create_image_stg = yes
            blk_extra_params_stg = "serial=TARGET_DISK0"
            Host_RHEL.m6..ide:
                blk_extra_params_stg = "wwn=0x5000123456789abc"
            disk_op_cmd = 'dd if=/dev/urandom of={disk} bs=1M count=200 oflag=direct'
        - with_remote_images:
            only gluster_direct
            only virtio_scsi virtio_blk
            scenario = boot_with_remote_images
            images += " stg1 stg2 stg3"
            boot_drive_stg1 = no
            boot_drive_stg2 = no
            boot_drive_stg3 = no
            image_name_stg1 = "images/stg1"
            image_name_stg2 = "images/stg2"
            image_name_stg3 = "images/stg3"
            image_size_stg1 = 1G
            image_size_stg2 = 1G
            image_size_stg3 = 1G
            remove_image_stg1 = yes
            remove_image_stg2 = yes
            remove_image_stg3 = yes
            force_create_image_stg1 = yes
            force_create_image_stg2 = yes
            force_create_image_stg3 = yes
            memory_diff = 100M
