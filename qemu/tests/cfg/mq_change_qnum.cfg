- mq_change_qnum:
    only Linux
    only virtio_net
    queues = 4
    no Host_RHEL.m5, Host_RHEL.m6
    # Here vectors should be queues * 2 + 2
    vectors = 10
    virt_test_type = qemu
    type = mq_change_qnum
    #In this test need to clone the guest to change guest msi support.
    clone_master = yes
    master_images_clone = image1
    remove_image_image1 =yes
    #set repeat_counts for chang queues number
    repeat_counts = 50
    ext_host_get_cmd = "ip route | awk '/default/ { print $3 }'"
    variants:
        - enable_msi:
        - disable_msi:
            pci_nomsi = yes
            #after set pci_nomsi, we need kill the vm.
            kill_vm = yes
    variants:
        - under_pktgen:
            only Host_RHEL.m7
            only RHEL.6 RHEL.7
            ping_after_changing_queues = yes
            final_ping_time = 30
            wait_bg_time = 60
            run_bgstress = pktgen
            bg_stress_run_flag = pktgen_run
            pktgen_test_timeout = 1200
            #set pktgen threads
            pktgen_threads = 1
            variants:
                - guest_guest:
                    pktgen_server = vm2
                    vms += " vm2"
                - host_guest:
                    #host as server
                    password_pktgen_server = redhat
                    shell_prompt_pktgen_server = \[root@.{0,50}][\#\$]
        - under_netperf_and_ping:
            # netperf server is host, the netperf client is the main vm
            run_bgstress = netperf_stress
            bg_ping = yes
            repeat_counts = 200
            background_ping_time = 300
            netperf_test_duration = 600
            # netperf_para_sessions should bigger than queues parameter.
            netperf_para_sessions = 6
            test_protocols = TCP_STREAM
            hostpassword = redhat
            netperf_output_unit = m
            netperf_local_cpu = yes
            netperf_remote_cpu = yes
            netperf_client = ${vms}
            netperf_server = localhost
            netperf_link = netperf-2.7.1.tar.bz2
            deviation_time = 20
            disable_firewall = "service iptables stop; systemctl stop firewalld.service"
            RHEL.4:
                netperf_link = netperf-2.4.5.tar.bz2
            server_path = /var/tmp/
            client_path = /var/tmp/
            Windows:
                netperf_server_link_win = "netserver-2.6.0.exe"
                netperf_client_link_win = "netperf.exe"
                server_path_win = "c:\\"
                client_path_win = "c:\\"
        - under_file_transfer:
            #timeout wait bg test start, when run file copy this time maybe longer
            #it depends the file size you want transfer
            wait_bg_time = 240
            run_bgstress = file_copy_stress
            bg_stress_run_flag = file_transfer_run
            stress_timeout = 360
            filesize = 512
            transfer_timeout = 1500
            repeat_counts = 500
            scp_para_sessions = 4
        - under_migrate:
            wait_bg_time = 10
            run_bgstress = migration
            migration_test_command = help
            migration_bg_command = "cd /tmp; nohup tcpdump -q -i any -t ip host localhost"
            migration_bg_check_command = pgrep tcpdump
            migration_bg_kill_command = pkill -9 tcpdump
            kill_vm_on_error = yes
            iterations = 2
            used_mem = 1024
            mig_timeout = 3600
            ping_pong = 1
            migration_protocol = "tcp"
            Windows:
                migration_test_command = ver && vol
                migration_bg_command = start ping -t localhost
                migration_bg_check_command = tasklist | find /I "ping.exe"
                migration_bg_kill_command = taskkill /IM ping.exe /F
    variants:
        - change_qnum:
        - change_error_qnum:
            queues = 4
            change_list = 1,2,3,4,5
        - disable_enable_queues:
            queues = 4
            change_list = 1,2,1,3,1,4,1
