- virtio_mem_hugetlb_migration:
    only Linux
    no Host_RHEL.m7 Host_RHEL.m8 Host_RHEL.m9.u0 Host_RHEL.m9.u1 Host_RHEL.m9.u2 Host_RHEL.m9.u3
    no RHEL.7 RHEL.8
    no s390x
    type = virtio_mem_hugetlb_migration
    virt_test_type = qemu
    smp = 8
    vcpu_maxcpus = ${smp}
    threshold = 0.025
    slots_mem = 20
    maxmem_mem = 80G
    mem = 8192
    size_mem_mem0 = 8G
    # This is a workaround to use the hugepages based on the size of mem.
    size_mem_vmem0 = ${size_mem_mem0}
    setup_hugepages = yes
    mem_devs = 'mem0 vmem0'
    backend_mem_vmem0 = memory-backend-file
    mem-path_vmem0 = /mnt/kvm_hugepage
    vm_memdev_model_vmem0 = "virtio-mem"
    reserve_vmem0 = no
    guest_numa_nodes = 'node0'
    numa_memdev_node0 = mem-mem0
    numa_cpus_node0 = "0-7"
    use_mem_mem0 = no
    use_mem_vmem0 = yes
    requested-size_memory_vmem0 = 1G
    node_memory_vmem0 = "0"
    memdev_memory_vmem0 = "mem-vmem0"
    prealloc_memory_vmem0 = yes
    kernel_extra_params_add = "memhp_default_state=online_movable"
    pcie_extra_root_port = 0
    requested-size_test_vmem0 = "4G"
    kill_vm_on_error = yes
    mig_timeout = 1200
    migration_protocol = "tcp"
    error_msg = "'requested-size' cannot exceed the memory backend size"
    requested-size_fail_vmem0 = "9G"
